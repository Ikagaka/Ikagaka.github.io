#!/usr/bin/env node

'use strict';

var encoding = require('../encoding');
var path = require('path');
var fs = require('fs');

var argv = process.argv.slice(2);
var command, filename, to_encoding, from_encoding;

switch (argv.length) {
  case 0:
    command = '-h';
    break;
  case 1:
    command = argv[0];
    filename = argv[1];
    break;
  case 2:
    command = argv[0];
    filename = argv[1];
    to_encoding = argv[2];
    break;
  case 3:
    command = argv[0];
    filename = argv[1];
    to_encoding = argv[2];
    from_encoding = argv[3];
    break;
  default:
    command = argv[0];
    filename = argv[1];
    break;
}

switch (command) {
  case '-v':
  case '--version':
    console.log('encoding-japanese', require('../package.json').version);
    process.exit(0);
    break;
  case '-c':
  case '--convert':
    convert(filename, to_encoding, from_encoding);
    process.exit(0);
    break;
  case '-d':
  case '--detect':
    detect(filename, to_encoding);
    process.exit(0);
    break;
  case '-h':
  case '--help':
  default:
    help();
    process.exit(0);
    break;
}


function convert(filename, to, from) {
  if (filename == null || filename.length === 0) {
    throw new Error('Missing argument <file_name>.');
  }

  if (to == null || !/[A-Za-z0-9]/.test(to)) {
    throw new Error('Missing argument <to_encoding>.');
  }

  var basename = path.basename(filename);
  if (basename == null || basename.length === 0) {
    throw new Error('Empty filename.');
  }

  if (fs.statSync(filename).isDirectory()) {
    throw new Error('Cannot add to archive a directory.');
  }

  var extname = to.replace(/[^A-Za-z0-9]+/g, '').toLowerCase();
  var outputName = path.resolve(
    path.dirname(filename) + path.sep + basename + '.' + extname
  );

  var data = fs.readFileSync(filename);
  var convertedArray = encoding.convert(data, to, from);
  var convertedBuffer = new Buffer(convertedArray);
  fs.writeFileSync(outputName, convertedBuffer);
}


function detect(filename, encodingName) {
  if (filename == null || filename.length === 0) {
    throw new Error('Missing argument <file_name>.');
  }

  var basename = path.basename(filename);
  if (basename == null || basename.length === 0) {
    throw new Error('Empty filename');
  }

  if (fs.statSync(filename).isDirectory()) {
    throw new Error('Cannot extract a directory.');
  }

  var data = fs.readFileSync(filename);
  var detected = encoding.detect(data, encodingName);
  console.log(detected);
}


function help() {
  console.log('Usage: encoding-japanese <command>');
  console.log('');
  console.log('Commands:');
  console.log('  -h, --help                                               show Help');
  console.log('  -v, --version                                            show Version');
  console.log('  -c, --convert <file_name> <to_encoding> [from_encoding]  Convert encoding');
  console.log('  -d, --detect <file_name> [encoding_name]                 Detect encoding');
}
